
CondaError: Run 'conda init' before 'conda activate'

FutureWarning: Importing from timm.models.layers is deprecated, please import via timm.layers
FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at ../aten/src/ATen/native/TensorShape.cpp:3595.)
FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
Using a slow image processor as `use_fast` is unset and a slow processor was saved with this model. `use_fast=True` will be the default behavior in v4.52, even if the model was saved with a slow processor. This will result in minor differences in outputs. You'll still be able to use a slow processor with `use_fast=False`.
Fetching 1 files:   0%|          | 0/1 [00:00<?, ?it/s]Fetching 1 files: 100%|##########| 1/1 [00:00<00:00, 495.43it/s]
  0%|          | 0/101 [00:00<?, ?it/s]FutureWarning: The `device` argument is deprecated and will be removed in v5 of Transformers.
UserWarning: torch.utils.checkpoint: the use_reentrant parameter should be passed explicitly. In version 2.5 we will raise an exception if use_reentrant is not passed. use_reentrant=False is recommended, but if you need to preserve the current default behavior, you can pass use_reentrant=True. Refer to docs for more details on the differences between the two variants.
UserWarning: None of the inputs have requires_grad=True. Gradients will be None
FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at ../torch/csrc/utils/tensor_new.cpp:278.)
  1%|          | 1/101 [00:11<19:56, 11.96s/it]  2%|1         | 2/101 [00:15<11:39,  7.07s/it]  3%|2         | 3/101 [00:19<09:02,  5.54s/it]  4%|3         | 4/101 [00:23<07:46,  4.81s/it]  5%|4         | 5/101 [00:26<07:01,  4.39s/it]  6%|5         | 6/101 [00:30<06:33,  4.14s/it]  7%|6         | 7/101 [00:34<06:24,  4.09s/it]  8%|7         | 8/101 [00:37<06:08,  3.96s/it]  9%|8         | 9/101 [00:40<05:18,  3.46s/it] 10%|9         | 10/101 [00:42<04:44,  3.12s/it] 11%|#         | 11/101 [00:45<04:20,  2.90s/it] 12%|#1        | 12/101 [00:47<04:02,  2.73s/it] 13%|#2        | 13/101 [00:49<03:49,  2.61s/it] 14%|#3        | 14/101 [00:52<03:40,  2.53s/it] 15%|#4        | 15/101 [00:54<03:32,  2.47s/it] 16%|#5        | 16/101 [00:56<03:26,  2.43s/it] 17%|#6        | 17/101 [00:59<03:21,  2.40s/it] 18%|#7        | 18/101 [01:01<03:17,  2.38s/it] 19%|#8        | 19/101 [01:03<03:14,  2.38s/it] 20%|#9        | 20/101 [01:06<03:12,  2.37s/it] 21%|##        | 21/101 [01:08<03:09,  2.37s/it] 22%|##1       | 22/101 [01:10<03:08,  2.38s/it] 23%|##2       | 23/101 [01:13<03:06,  2.39s/it] 24%|##3       | 24/101 [01:15<03:03,  2.38s/it] 25%|##4       | 25/101 [01:18<03:01,  2.39s/it] 26%|##5       | 26/101 [01:20<02:58,  2.37s/it] 27%|##6       | 27/101 [01:22<02:55,  2.37s/it] 28%|##7       | 28/101 [01:25<02:52,  2.37s/it] 29%|##8       | 29/101 [01:27<02:50,  2.37s/it] 30%|##9       | 30/101 [01:29<02:47,  2.35s/it] 31%|###       | 31/101 [01:32<02:44,  2.35s/it] 32%|###1      | 32/101 [01:34<02:41,  2.34s/it] 33%|###2      | 33/101 [01:36<02:38,  2.34s/it] 34%|###3      | 34/101 [01:39<02:37,  2.35s/it] 35%|###4      | 35/101 [01:41<02:34,  2.34s/it] 36%|###5      | 36/101 [01:43<02:32,  2.34s/it] 37%|###6      | 37/101 [01:46<02:29,  2.34s/it] 38%|###7      | 38/101 [01:48<02:26,  2.33s/it] 39%|###8      | 39/101 [01:50<02:24,  2.34s/it] 40%|###9      | 40/101 [01:53<02:21,  2.32s/it] 41%|####      | 41/101 [01:55<02:19,  2.33s/it] 42%|####1     | 42/101 [01:57<02:17,  2.33s/it] 43%|####2     | 43/101 [02:00<02:15,  2.33s/it] 44%|####3     | 44/101 [02:02<02:12,  2.33s/it] 45%|####4     | 45/101 [02:04<02:10,  2.33s/it] 46%|####5     | 46/101 [02:07<02:08,  2.33s/it] 47%|####6     | 47/101 [02:09<02:05,  2.33s/it] 48%|####7     | 48/101 [02:11<02:03,  2.34s/it] 49%|####8     | 49/101 [02:14<02:01,  2.34s/it] 50%|####9     | 50/101 [02:16<01:59,  2.35s/it] 50%|#####     | 51/101 [02:18<01:56,  2.34s/it] 51%|#####1    | 52/101 [02:21<01:54,  2.34s/it] 52%|#####2    | 53/101 [02:23<01:52,  2.35s/it] 53%|#####3    | 54/101 [02:25<01:50,  2.34s/it] 54%|#####4    | 55/101 [02:28<01:47,  2.35s/it] 55%|#####5    | 56/101 [02:30<01:45,  2.34s/it] 56%|#####6    | 57/101 [02:33<01:43,  2.35s/it] 57%|#####7    | 58/101 [02:35<01:40,  2.35s/it] 58%|#####8    | 59/101 [02:37<01:38,  2.35s/it] 59%|#####9    | 60/101 [02:40<01:36,  2.35s/it] 60%|######    | 61/101 [02:42<01:33,  2.35s/it] 61%|######1   | 62/101 [02:44<01:31,  2.35s/it] 62%|######2   | 63/101 [02:47<01:29,  2.37s/it] 63%|######3   | 64/101 [02:49<01:28,  2.38s/it] 64%|######4   | 65/101 [02:51<01:25,  2.38s/it] 65%|######5   | 66/101 [02:54<01:23,  2.38s/it] 66%|######6   | 67/101 [02:56<01:21,  2.39s/it] 67%|######7   | 68/101 [02:59<01:18,  2.37s/it] 68%|######8   | 69/101 [03:01<01:16,  2.38s/it] 69%|######9   | 70/101 [03:03<01:14,  2.39s/it] 70%|#######   | 71/101 [03:06<01:12,  2.41s/it] 71%|#######1  | 72/101 [03:08<01:10,  2.42s/it] 72%|#######2  | 73/101 [03:11<01:07,  2.43s/it] 73%|#######3  | 74/101 [03:13<01:05,  2.43s/it] 74%|#######4  | 75/101 [03:16<01:03,  2.43s/it] 75%|#######5  | 76/101 [03:18<01:00,  2.43s/it] 76%|#######6  | 77/101 [03:20<00:58,  2.44s/it] 77%|#######7  | 78/101 [03:23<00:56,  2.45s/it] 78%|#######8  | 79/101 [03:25<00:53,  2.45s/it] 79%|#######9  | 80/101 [03:28<00:51,  2.46s/it] 80%|########  | 81/101 [03:30<00:49,  2.45s/it] 81%|########1 | 82/101 [03:33<00:47,  2.48s/it] 82%|########2 | 83/101 [03:35<00:44,  2.48s/it] 83%|########3 | 84/101 [03:38<00:41,  2.47s/it] 84%|########4 | 85/101 [03:40<00:39,  2.45s/it] 85%|########5 | 86/101 [03:43<00:36,  2.44s/it] 86%|########6 | 87/101 [03:45<00:33,  2.43s/it] 87%|########7 | 88/101 [03:47<00:31,  2.42s/it] 88%|########8 | 89/101 [03:50<00:28,  2.40s/it] 89%|########9 | 90/101 [03:52<00:26,  2.39s/it] 90%|######### | 91/101 [03:55<00:23,  2.39s/it] 91%|#########1| 92/101 [03:57<00:21,  2.38s/it] 92%|#########2| 93/101 [03:59<00:18,  2.36s/it] 93%|#########3| 94/101 [04:01<00:16,  2.34s/it] 94%|#########4| 95/101 [04:04<00:13,  2.33s/it] 95%|#########5| 96/101 [04:06<00:11,  2.32s/it] 96%|#########6| 97/101 [04:08<00:09,  2.32s/it] 97%|#########7| 98/101 [04:11<00:06,  2.31s/it] 98%|#########8| 99/101 [04:13<00:04,  2.32s/it] 99%|#########9| 100/101 [04:15<00:02,  2.32s/it]100%|##########| 101/101 [04:18<00:00,  2.32s/it]100%|##########| 101/101 [04:18<00:00,  2.56s/it]
